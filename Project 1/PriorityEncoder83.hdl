// Alisa Lin 228008046

/**
 * Priority Encoder 
 * out always contains the encoded id of the active input based on priority
 * idle is 1 if all inputs are inactive, otherwise it is 0
 */

CHIP PriorityEncoder83 {
    IN a[8];
    OUT out[3], idle;

    PARTS:
    // 1st chip output
    // out2 = (a4+a5) + (a6+a7)
    Or(a=a[7],b=a[6],out=a7Ora6);
    Or(a=a[5],b=a[4],out=a5Ora4);
    Or(a=a7Ora6,b=a5Ora4,out=out[2]);

    // out1 = (a2+a3)(a4+a5)' + (a6+a7)
    Or(a=a[3],b=a[2],out=a3Ora2);
    Nor(a=a[5],b=a[4],out=a5Nora4);
    And(a=a3Ora2,b=a5Nora4,out=a3Ora2Anda5Nora4);
    Or(a=a7Ora6,b=a3Ora2Anda5Nora4,out=out[1]);

    // out0 = priority1 + priority3 + priority5 + priority 7

    // Priority 1: a1a2'a4'a6'
    Not(in=a[2],out=a2Not);
    Not(in=a[4],out=a4Not);
    Not(in=a[6],out=a6Not);
    And(a=a[1],b=a2Not,out=a1Anda2Not);
    And(a=a1Anda2Not,b=a4Not,out=a1Anda2NotAnda4Not);
    And(a=a1Anda2NotAnda4Not,b=a6Not,out=a1Anda2NotAnda4NotAnda6Not);
    
    // Priority 3: a3a4'a6'
    And(a=a[3],b=a4Not,out=a3Anda4Not);
    And(a=a3Anda4Not,b=a6Not,out=a3Anda4NotAnda6Not);
    
    // Priority 5: a5a6'
    And(a=a[5],b=a6Not,out=a5Anda6Not);

    // Priority 7: out0
    Or(a=a[7],b=a5Anda6Not,out=out0Orout1);
    Or(a=out0Orout1,b=a3Anda4NotAnda6Not,out=out0Orout2);
    Or(a=out0Orout2,b=a1Anda2NotAnda4NotAnda6Not,out=out[0]);



    // all inputs a[7:0] are 0, idle = 1. else, idle = 0 ==> 2nd chip output
    Or8Way(in=a,out=outIdle);
    Not(in=outIdle,out=idle);
    
}